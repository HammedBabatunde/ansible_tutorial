- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import Vpc Varibales
      include_vars: vars/vpc_setup

    - name: Create vprofile VPC
      ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ vpcCidr }}"
        region: "{{ region }}"
        state: "{{ state }}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
      register: vpcout

   # - debug:
    #    var: vpcout

    - name: create Public Subnet 1 in Zone1
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        state: "{{ state }}"
        region: "{{ region }}"
        az: "{{ zone1 }}"
        cidr: "{{ PubSub1Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile-pubsub1
      register: pubsub1out

    - name: create Public Subnet 2 in Zone2
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        state: "{{ state }}"
        region: "{{ region }}"
        az: "{{ zone2 }}"
        cidr: "{{ PubSub2Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile-pubsub2
      register: pubsub2out

    - name: create Public Subnet 3 in Zone3
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        state: "{{ state }}"
        region: "{{ region }}"
        az: "{{ zone3 }}"
        cidr: "{{ PubSub3Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile-pubsub3
      register: pubsub3out

    - name: create Private Subnet 1 in Zone1
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        state: "{{ state }}"
        region: "{{ region }}"
        az: "{{ zone1 }}"
        cidr: "{{ PrivSub1Cidr }}"
        resource_tags:
          Name: vprofile-privsub1
      register: privsub1out

    - name: create Private Subnet 2 in Zone2
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        state: "{{ state }}"
        region: "{{ region }}"
        az: "{{ zone2 }}"
        cidr: "{{ PrivSub2Cidr }}"
        resource_tags:
          Name: vprofile-privsub2
      register: privsub2out
       
    - name: create Private Subnet 3 in Zone3
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        state: "{{ state }}"
        region: "{{ region }}"
        az: "{{ zone3 }}"
        cidr: "{{ PrivSub3Cidr }}"
        resource_tags:
          Name: vprofile-privsub3
      register: privsub3out

    - name: Internet Gateway Setup
      ec2_vpc_igw:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        state: "{{ state }}"
        resource_tags:
          Name: vprofile-IGW
      register: igw_out

    - name: Setup Public Subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: Vprofile-pubRT
        subnets:
          - "{{ pubsub1out.subnet.id }}"
          - "{{ pubsub2out.subnet.id }}"
          - "{{ pubsub3out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw_out.gateway_id }}"
      register: pubRT_out

    - name: Create new nat gateway and allocate new EIP if a nat gateway does not exist
      ec2_vpc_nat_gateway:
        state: "{{ state }}"
        region: "{{ region }}"
        subnet_id: "{{ pubsub1out.subnet.id }}"
        wait: yes
        if_exist_do_not_create: true
      register: NATGW_out

    # - debug:
    #     var: NATGW_out

    - name: Setup Private Subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: Vprofile_PrivRT
        subnets:
          - "{{ privsub1out.subnet.id }}"
          - "{{ privsub2out.subnet.id }}"
          - "{{ privsub3out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ NATGW_out.nat_gateway_id }}"
      register: privRT_out

    - debug:
        var: "{{item}}"
      loop:
        - vpcout.vpc.id
        - pubsub1out.subnet.id
        - pubsub2out.subnet.id
        - pubsub3out.subnet.id
        - privsub1out.subnet.id
        - privsub2out.subnet.id
        - privsub3out.subnet.id
        - igw_out.gateway_id
        - pubRT_out.route_table.id
        - NATGW_out.nat_gateway_id
        - privRT_out.route_table.id

    - set_fact:
        vpc_id: "{{ vpcout.vpc.id }}"
        pubsub1_id: "{{ pubsub1out.subnet.id }}"
        pubsub2_id: "{{ pubsub2out.subnet.id }}"
        pubsub3_id: "{{ pubsub3out.subnet.id }}"
        privsub1_id: "{{ privsub1out.subnet.id }}"
        privsub2_id: "{{ privsub2out.subnet.id }}"
        privsub3_id: "{{ privsub3out.subnet.id }}"
        igw_id: "{{ igw_out.gateway_id }}"
        pubRT_id: "{{ pubRT_out.route_table.id }}"
        NATGW_id: "{{ NATGW_out.nat_gateway_id }}"
        privRT_id: "{{ privRT_out.route_table.id }}"
        cacheable: yes

    - name: Create Variables file for vpc output
      copy:
        content: "vpc_id: {{ vpcout.vpc.id }}\npubsub1_id: {{ pubsub1out.subnet.id }}\npubsub2_id: {{ pubsub2out.subnet.id }}\npubsub3_id: {{ pubsub3out.subnet.id }}\nprivsub1_id: {{ privsub1out.subnet.id }}\nprivsub2_id: {{ privsub2out.subnet.id }}\nprivsub3_id: {{ privsub3out.subnet.id }}\nigw_id: {{ igw_out.gateway_id }}\npubRT_id: {{ pubRT_out.route_table.id }}\nNATGW_id: {{ NATGW_out.nat_gateway_id }}\nprivRT_id: {{ privRT_out.route_table.id }}"
        dest: vars/output_vars